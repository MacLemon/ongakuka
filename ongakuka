#!/bin/bash

# ongakuka
# License: Two Clause BSD

# By Pepi Zawodsky
# aka @MacLemon

highestAvailabelPort=65535
lowestAvailablePort=1025;
daapPort=13689

# connection to use if none is specified
sshNickname="Ongakuka"

# Checking if we got a different connection to use other than the default Ongakuka we use by default.
# Did we get a parameter as a connection to use
if [ -z "$1" ]
then

    if [ "$1" == "Ongakuka" ]
    then
        sshNickname="$1" ; # Overriding SSH nickname
        myhostname="$1"
    else
        echo "No need to sepcify \"$1\" as this is the default we would use anyway."

        if [ $OSTYPE = "cygwin" ];
        then # Cygwin on Windows
            myhostname=$(hostname)
        else # Darwin or other *nix
            myhostname=$(hostname -s)
        fi
    fi
fi




localMusicPort=$[ ( $RANDOM % ( $[ $highestAvailabelPort - $lowestAvailablePort ] + 1 ) ) + $lowestAvailablePort ]


echo localMusicPort=$localMusicPort

# -N Do not execute a remote command.  This is useful for just forwarding ports (protocol version 2 only).
# -g Allows remote hosts to connect to local forwarded ports.
sshOptions="-N -g"



ssh -L $localMusicPort:127.0.0.1:$daapPort $sshOptions $sshNickname &
sshTunnelPID=$!
echo sshTunnelPID=$sshTunnelPID
sleep 5

# Announcing the Tunneled Music Share via Bonjour

if [ -e "/usr/bin/dns-sd" ]
then
    # Standard path to dns-sd on darwin < 12 (before OS X 10.8)
    mDNSbinary=/usr/bin/dns-sd
elif [ -e "/usr/bin/mDNS" ]
then
    # Standard path to mDNS on darwin >= 12 (10.8 and higher)
   mDNSbinary=/usr/bin/mDNS
elif [ -e "/cygdrive/c/Windows/system32/dns-sd" ]
then
        # Standard path to CygWIN on Windows
        mDNSbinary=/cygdrive/c/Windows/system32/dns-sd
else
    echo "$0: Fatal: Neither /usr/bin/dns-sd nor /usr/bin/mDNS nor /cygdrive/c/Windows/system32/dns-sd could be found for Bonjour announcement." >&2
    exit 127 # Couldn't find a known binary to announce mDSN.
fi

$mDNSbinary -R "$sshNickname $myhostname" _daap._tcp. . $localMusicPort &
mDNSPID=$!

sleep 5

echo "Ongakuka Music Tunnel established. Happy listening!"
read -n1 -p "Press any key to shut down the tunnel." anykey
unset anykey

# Cleaning up
# echo Unannouncing Bonjour
kill $mDNSPID
sleep 3

# echo Closing SSH Tunnel
kill $sshTunnelPID

#EOF
